{"ast":null,"code":"import api from './api';\n\n// Create a new match (organizer only)\nexport const createMatch = async matchData => {\n  try {\n    const response = await api.post('/matches', matchData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: 'Failed to create match'\n    };\n  }\n};\n\n// Get tournament matches\nexport const getTournamentMatches = async tournamentId => {\n  try {\n    const response = await api.get(`/matches/tournament/${tournamentId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Failed to fetch tournament matches'\n    };\n  }\n};\n\n// Get match by ID\nexport const getMatchById = async matchId => {\n  try {\n    const response = await api.get(`/matches/${matchId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      message: 'Failed to fetch match details'\n    };\n  }\n};\n\n// Update match results (organizer only)\nexport const updateMatchResults = async (matchId, matchData) => {\n  try {\n    const response = await api.put(`/matches/${matchId}`, matchData);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n      message: 'Failed to update match results'\n    };\n  }\n};\n\n// Delete match (organizer only)\nexport const deleteMatch = async matchId => {\n  try {\n    const response = await api.delete(`/matches/${matchId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n      message: 'Failed to delete match'\n    };\n  }\n};\n\n// Get player's matches\nexport const getPlayerMatches = async () => {\n  try {\n    const response = await api.get('/matches/player/mymatches');\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n      message: 'Failed to fetch your matches'\n    };\n  }\n};","map":{"version":3,"names":["api","createMatch","matchData","response","post","data","error","_error$response","message","getTournamentMatches","tournamentId","get","_error$response2","getMatchById","matchId","_error$response3","updateMatchResults","put","_error$response4","deleteMatch","delete","_error$response5","getPlayerMatches","_error$response6"],"sources":["C:/esports(3)/frontend/src/services/matchService.js"],"sourcesContent":["import api from './api';\n\n// Create a new match (organizer only)\nexport const createMatch = async (matchData) => {\n  try {\n    const response = await api.post('/matches', matchData);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { message: 'Failed to create match' };\n  }\n};\n\n// Get tournament matches\nexport const getTournamentMatches = async (tournamentId) => {\n  try {\n    const response = await api.get(`/matches/tournament/${tournamentId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { message: 'Failed to fetch tournament matches' };\n  }\n};\n\n// Get match by ID\nexport const getMatchById = async (matchId) => {\n  try {\n    const response = await api.get(`/matches/${matchId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { message: 'Failed to fetch match details' };\n  }\n};\n\n// Update match results (organizer only)\nexport const updateMatchResults = async (matchId, matchData) => {\n  try {\n    const response = await api.put(`/matches/${matchId}`, matchData);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { message: 'Failed to update match results' };\n  }\n};\n\n// Delete match (organizer only)\nexport const deleteMatch = async (matchId) => {\n  try {\n    const response = await api.delete(`/matches/${matchId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { message: 'Failed to delete match' };\n  }\n};\n\n// Get player's matches\nexport const getPlayerMatches = async () => {\n  try {\n    const response = await api.get('/matches/player/mymatches');\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { message: 'Failed to fetch your matches' };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}